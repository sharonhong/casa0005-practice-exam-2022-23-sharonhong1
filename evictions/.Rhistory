library(tidyverse)
library(sf)
library(tmap)
library(janitor)
library(spatstat)
evictions_points <- read_csv("/Users/hongshy/Desktop/casa0005-practice-exam-2022-23-sharonhong/Evictions.csv", na=" ")
community_areas <- st_read("/Users/hongshy/Desktop/casa0005-practice-exam-2022-23-sharonhong/Community Districts/geo_export_dab78e36-b0aa-413a-a148-65b921cb9b8a.shp")
Datatypelist <- evictions_points %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
Datatypelist
points <- evictions_points%>%
filter(Longitude<0 & Latitude>0)%>%
st_as_sf(., coords = c("Longitude", "Latitude"),
crs = 4326)
tmap_mode("plot")
tm_shape(community_areas) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(points) +
tm_dots(col = "blue")
points <- evictions_points%>%
filter(Longitude<0 & Latitude>0)%>%
st_as_sf(., coords = c("Longitude", "Latitude"),
crs = 4326)
community_areas <- community_areas%>%
st_transform(., 4326)
points_sub <- points[community_areas,]
points_sub_2020<-points_sub%>%
clean_names()%>%
filter(str_detect(executed_date, "2020"))%>%
# filter(eviction_legal_possession=="Eviction")%>%
filter(residential_commercial=="Residential")
points_sub_2020<-points_sub%>%
clean_names()%>%
filter(str_detect(executed_date, "2020"))%>%
# filter(eviction_legal_possession=="Eviction")%>%
filter(residential_commercial=="Residential")
tmap_mode("plot")
tm_shape(community_areas) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(points_sub_2020) +
tm_dots(col = "blue")
community_areas_projected <- community_areas %>%
st_transform(., 6538)
points_sub_2020_projected <- points_sub_2020 %>%
st_transform(., 6538)
window <- as.owin(community_areas_projected)
plot(window)
#create a sp object
points_sub_2020_projected_sp<- points_sub_2020_projected %>%
as(., 'Spatial')
#create a ppp object
points_sub_2020_projected_sp.ppp <- ppp(x=points_sub_2020_projected_sp@coords[,1],
y=points_sub_2020_projected_sp@coords[,2],
window=window)
K <- points_sub_2020_projected_sp.ppp %>%
Kest(., correction="border") %>%
plot()
points_todf<- points_todf %>%
mutate(dbcluster=points_todf_DBSCAN$cluster)
library(sp)
#first extract the points from the spatial points data frame
points_todf <- points_sub_2020_projected_sp %>%
coordinates(.)%>%
as.data.frame()
#now run the dbscan analysis
points_todf_DBSCAN <- points_todf %>%
fpc::dbscan(.,eps = 1000, MinPts = 50)
points_todf%>%
dbscan::kNNdistplot(.,k=50)
#now quickly plot the results
plot(points_todf_DBSCAN, points_todf, main = "DBSCAN Output", frame = F)
plot(community_areas_projected$geometry, add=T)
points_todf<- points_todf %>%
mutate(dbcluster=points_todf_DBSCAN$cluster)
tosf <- points_todf%>%
st_as_sf(., coords = c("coords.x1", "coords.x2"),
crs = 6538)%>%
filter(dbcluster>0)
ggplot(data = community_areas_projected) +
# add the geometry of the community areas
geom_sf() +
# add the geometry of the points - i have had to set the data here to add the layer
geom_sf(data = tosf, size = 0.4, colour=tosf$dbcluster, fill=tosf$dbcluster)
library(tmap)
library(sf)
#tmaptools::palette_explorer()
library(RColorBrewer)
library(tmaptools)
colours<- get_brewer_pal("Set1", n = 19)
tmap_mode("plot")
tm_shape(community_areas) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(tosf) +
tm_dots(col = "dbcluster",  palette = colours, style = "cat")
library(tidyverse)
library(sf)
library(tmap)
library(janitor)
library(spatstat)
#calculate the density
community_areas_density <- community_areas_projected %>%
mutate(n = lengths(st_intersects(.,points_sub_2020_projected )))%>%
janitor::clean_names()%>%
#calculate area
mutate(area=st_area(.))%>%
#then density of the points per ward
mutate(density=n/area)
points_sf_joined2<-shp%>%
mutate(n = lengths(st_intersects(., graffiti4)))%>%
janitor::clean_names()%>%
#calculate area
mutate(area=st_area(.))%>%
#then density of the points per ward
mutate(density=n/area)
View(community_areas_density)
coordsW <- community_areas_density %>%
st_centroid() %>%
st_geometry()
plot(coordsW,axes=TRUE)
#create a neighbours list
LWard_nb <- community_areas_density %>%
poly2nb(., queen=T)
library(tidyverse)
library(tmap)
library(geojsonio)
library(plotly)
library(rgdal)
library(broom)
library(mapview)
library(crosstalk)
library(sf)
library(sp)
library(spdep)
library(car)
library(fs)
library(janitor)
library(spatstat)
coordsW <- community_areas_density %>%
st_centroid() %>%
st_geometry()
plot(coordsW,axes=TRUE)
#create a neighbours list
LWard_nb <- community_areas_density %>%
poly2nb(., queen=T)
#plot them
plot(LWard_nb, st_geometry(coordsW), col="red")
#add a map underneath
plot(shp3$geometry, add=T)
#plot them
plot(LWard_nb, st_geometry(coordsW), col="red")
#add a map underneath
plot(community_areas_density$geometry, add=T)
Lward.lw <- LWard_nb %>%
nb2listw(., style="C")
I_LWard_Global_Density <-
community_areas_density %>%
pull(density) %>%
as.vector()%>%
moran.test(., Lward.lw)
I_LWard_Global_Density
